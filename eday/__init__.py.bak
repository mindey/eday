"""This module provides functions for converting between dates and epoch days."""
import datetime

SECONDS_IN_DAY = 86400.

def from_date(date):
    """Converts a date object or ISO formatted string to epoch days."""
    if isinstance(date, str):
        date = datetime.datetime.fromisoformat(date)

    return date.timestamp()/SECONDS_IN_DAY

def to_date(eday):
    """Converts epoch days to a datetime object in UTC."""
    if any(isinstance(eday, type) for type in [str, int, float]):
        eday = float(eday)

    return datetime.datetime.utcfromtimestamp(eday*SECONDS_IN_DAY).replace(
        tzinfo=datetime.timezone.utc)

def now():
    """Returns the current date and time in epoch days."""
    return from_date(datetime.datetime.utcnow())
